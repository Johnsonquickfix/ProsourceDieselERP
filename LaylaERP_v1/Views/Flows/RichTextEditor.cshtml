
@{
    ViewBag.Title = "Rich Text Editor";
    Layout = "~/Views/Shared/_qfk_Layout.cshtml";
    var user = LaylaERP.UTILITIES.CommanUtilities.Provider.GetCurrent();
    LaylaERP.Models.qfk.Flows.ActionMessage o = Newtonsoft.Json.JsonConvert.DeserializeObject<LaylaERP.Models.qfk.Flows.ActionMessage>(LaylaERP.BAL.qfk.FlowsRepository.FlowAdd("get-content", user.login_company_id, ViewBag.id, user.UserID, string.Empty));
}

<div id="root">
    <div class="row border-bottom">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <div>
                <ol class="breadcrumb m-0 font-size-18">
                    <li class="breadcrumb-item"><a href="/flows/@o.metadata.flow_id/edit">@o.metadata.flow_name</a></li>
                    <li class="breadcrumb-item"><a href="/flows/@o.content_id/content">@o.name</a></li>
                    <li class="breadcrumb-item">Message Content</li>
                </ol>
            </div>
            <div class="page-title-right">
            </div>
        </div>
    </div>
    <div class="row mt-3 justify-content-md-center">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <div>
                    <a href="~/flows/@o.content_id/content" class="btn btn-outline-dark"><i class="fas fa-arrow-left me-2"></i>Back to Content</a>
                </div>
                <div class="page-title-right">
                    <button id="save-content" class="btn btn-outline-dark float-end">Save content</button>
                </div>
            </div>
        </div>
        <div class="col-12">
            @if (!string.IsNullOrEmpty(o.data_html))
            {
                <textarea id="editorcontent">@o.data_html</textarea>
            }
            else
            {
                <textarea id="editorcontent"><p>Hi {{ first_name }},</p><p>This is an email just for you. We hope you like it.</p><p>The Team</p></textarea>
            }
        </div>
    </div>
</div>
<script src="~/js/qfk/HtmlEditor/1.5.5/tinymce/tinymce.min.js"></script>
<script type="module">
    import Http from '@Url.Content("~/js/http/index.js")';
    var e = e || document;
    tinyMCE.init({
        selector: '#editorcontent', menubar: false, height: 400,
        toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist ',
    });
    e.addEventListener("DOMContentLoaded", function () {
        e.querySelector("#save-content").addEventListener("click", (evt) => { evt.preventDefault(), evt.stopPropagation(), updateContent(); });
        function updateContent() {
            let j = { id: @o.content_id, content_type: 'text', data_html: tinyMCE.get("editorcontent").getContent()};

            if (j.id === 0) { swal('Error!', 'Invalid content.', 'error').then(function () { swal.close(); }); return false; }
            else {
                Http.post(`/api/flow/message/${j.id}/content-data`, { body: j }).then(response => response.json())
                    .then((response) => {
                        if (response.status === 200) { window.location = window.location.origin + `/flows/${j.id}/content`; }
                        else { swal('Error!', response.message, 'error'); }
                    }).catch(error => { console.log('error', error); });
            }
        }
    });
</script>