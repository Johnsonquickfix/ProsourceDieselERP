
@{
    ViewBag.Title = "library";
    Layout = "~/Views/Shared/_qfk_Layout.cshtml";
    var user = LaylaERP.UTILITIES.CommanUtilities.Provider.GetCurrent();
    LaylaERP.Models.qfk.Campaigns.CampaignRequest o = Newtonsoft.Json.JsonConvert.DeserializeObject<LaylaERP.Models.qfk.Campaigns.CampaignRequest>(LaylaERP.BAL.qfk.CampaignRepository.CampaignsAdd("get", user.UserID, 1, ViewBag.id, string.Empty));
}
<link href="~/Content/Site.css" rel="stylesheet" />
<!-- DataTables -->
<link href="~/Content/AdminLTE-3.1.0/datatables/DataTables-1.10.20/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/Content/AdminLTE-3.1.0/datatables/Buttons-1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />
<!-- datatables js -->
<script src="~/Content/AdminLTE-3.1.0/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/Content/AdminLTE-3.1.0/datatables/DataTables-1.10.20/js/dataTables.bootstrap4.min.js" type="text/javascript"></script>

<div id="root">
    <div class="row border-bottom">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <div>
                <ol class="breadcrumb m-0 font-size-18">
                    <li class="breadcrumb-item"><a href="/campaigns/list">Campaigns</a></li>
                    <li class="breadcrumb-item">Edit @o.campaign_name</li>
                </ol>
            </div>
            <div class="page-title-right">
            </div>
        </div>
    </div>
    <div class="row mt-3 justify-content-md-center">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <div>
                    <h3>Templates</h3>
                </div>
                <div class="page-title-right">
                    <a href="~/campaigns/@ViewBag.id/content"><i class="fas fa-arrow-left me-2"></i>Back to content overview</a>
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <table id="datatable" class="table dt-responsive w-100 align-middle">
            </table>
        </div>
    </div>
</div>

<div id="modalView" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Template Name</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <iframe id="preview" srcdoc="" frameborder="0" style="width: 100%; min-height:350px" sandbox="allow-same-origin allow-scripts allow-popups allow-forms"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary waves-effect" data-bs-dismiss="modal">Cancel</button>
                <button id="use_template" type="button" class="btn btn-primary waves-effect waves-light">Use template</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<script src="~/Content/AdminLTE-3.1.0/daterangepicker/moment.min.js"></script>
@*<script src="~/Content/assets/js/masking-input.js" data-autoinit="true"></script>*@
<script>
    document.querySelector("#use_template").addEventListener("click", (evt) => {
        evt.preventDefault(), evt.stopPropagation();
        let _i = parseInt($('#use_template').data('id')) || 0;
        updateContent(_i);
    });
    function updateContent(temp_id) {
        let j = { campaign_id: @ViewBag.id, action: 'template', content: { content_type: 'email', template_id: temp_id } };
        const iframe = document.getElementById("preview");
        //j.contentdata = { data_html: iframe.srcdoc };
        //console.log(j); return;
        if (j.campaign_id === 0) { swal('Error!', 'Invalid campaign.', 'error').then(function () { swal.close(); }); return false; }
        else {
            var requestOptions = {
                method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(j)
            };
            fetch('/api/campaigns', requestOptions).then(response => response.json())
                .then(result => {
                    if (result.status > 0) window.location = window.location.origin + `/campaigns/${result.id}/content`;
                    else  swal('Info!', result.response, 'info');
                }).catch(error => { swal('Error!', error, 'error'); } );
        }
    }
    function GetTemplate(id, title) {
        $('#modalView .modal-title').html(title), $('#modalView').modal('show');
        $('#use_template').data('id', id);
        $.get(`/api/email-templates/template/${id}`).done(function (data) {
            $.each(data, function (index, value) {
                const iframe = document.getElementById("preview");
                iframe.srcdoc = value.data_html;
            });
        }).fail(function (jqxhr, settings, ex) { });
    };
    $('#datatable').DataTable({
        lengthMenu: [[25, 50, 100], [25, 50, 100]], order: [[2, "desc"]],
        destroy: true, bProcessing: true, responsive: false, bServerSide: true, bAutoWidth: true, scrollX: false,
        language: {
            lengthMenu: "_MENU_ per page", zeroRecords: "Sorry no records found", info: "Showing <b>_START_ to _END_</b> of _TOTAL_",
            infoFiltered: "", infoEmpty: "No records found", processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>'
        },
        sAjaxSource: "/api/email-templates/list",
        fnServerData: function (sSource, aoData, fnCallback, oSettings) {
            if (oSettings.aaSorting.length > 0) { aoData.push({ name: "sSortColName", value: oSettings.aoColumns[oSettings.aaSorting[0][0]].data }); }
            oSettings.jqXHR = $.ajax({
                url: sSource, data: aoData,// dataType: 'json', type: "get",
                success: function (result) {
                    //let _recordsTotal = data.length > 0 ? data[0].totalcount : 0;
                    return fnCallback({ sEcho: aoData.find(el => el.name === "sEcho").value, recordsTotal: result.total, recordsFiltered: result.total, aaData: result.data });
                }
            });
        },
        columns: [
            {
                data: 'name', title: 'Name', sWidth: "40%", render: function (data, type, row, meta) {
                    //return `<div class="d-flex"><img src="${row.thumbnail_url != null ? row.thumbnail_url : '/content/images/logo.png'}" alt="" height="40" width="40" class="rounded"><div class="ms-3 align-self-center overflow-hidden me-auto"><a href="/emailtemplates/editor/${row.template_id}">${data}</a></div>`;
                    return `<div class="d-flex"><img src="${row.thumbnail_url != null ? row.thumbnail_url : '/content/images/logo.png'}" alt="" height="40" width="40" class="rounded"><div class="ms-3 align-self-center overflow-hidden me-auto"><a href="javascript:void(0);" onclick="GetTemplate(${row.template_id}, '${data}')">${data}</a></div>`;
                }
            },
            { data: 'created', title: 'Added On', sWidth: "15%", render: function (data, type, row, meta) { return moment(data).format('MMMM Do YYYY, h:mm A'); } },
            { data: 'updated', title: 'Last Update', sWidth: "15%", render: function (data, type, row, meta) { return moment(data).format('MMMM Do YYYY, h:mm A'); } },
        ]
    });
</script>
