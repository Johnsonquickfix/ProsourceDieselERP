
@{
    ViewBag.Title = "Campaigns";
    Layout = "~/Views/Shared/_qfk_Layout.cshtml";
}
<link href="~/Content/AdminLTE-3.1.0/datatables/DataTables-1.10.20/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="~/Content/AdminLTE-3.1.0/datatables/Buttons-1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />
<!-- datatables js -->
<script src="~/Content/AdminLTE-3.1.0/datatables/datatables.min.js" type="text/javascript"></script>
<script src="~/Content/AdminLTE-3.1.0/datatables/DataTables-1.10.20/js/dataTables.bootstrap4.min.js" type="text/javascript"></script>
<!-- Full Calendar -->
<link href="~/Content/fullcalendar/fullcalendar.css" rel="stylesheet" />


<div id="root">
    <!-- start page title -->

    <div class="page-title-box d-sm-flex align-items-center justify-content-between">
        <div class="page_title">
            Campaigns
        </div>
        <div class="page-title-right d-sm-flex align-items-center">
            <select class="select-control">
                <option>Options</option>
                <option>Export analytics</option>
                <option>View email trends</option>
                <option>View Smart Send Time report</option>
                <option>View archived campaigns</option>
            </select>
            <a href="~/campaigns/create" id="define-source" class="black_btn ms-2">Create campaign</a>
        </div>
    </div><!--title top bar-->
    <div class="tabs_wrapper">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#list_view" type="button" role="tab" aria-controls="list_view" aria-selected="true">List view</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#calendar_view" type="button" role="tab" aria-controls="calendar_view" aria-selected="false">Calendar</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="list_view" role="tabpanel" aria-labelledby="home-tab">
                <div class="card">
                    <div class="card-body">
                        <table id="datatable" class="table dt-responsive w-100 align-middle">
                        </table>
                    </div>
                </div>
            </div>
            <div class="tab-pane fade" id="calendar_view" role="tabpanel" aria-labelledby="profile-tab">
                <div class="row">
                    <div class="col-md-12 col-md-push-0">
                        <div class="box box-primary">
                            <div class="box-body no-padding">
                                <!-- THE CALENDAR -->
                                <div id="eventcalendar"></div>
                            </div>
                        </div>
                    </div><!-- /.col -->
                </div>

            </div>
        </div>
    </div>

</div>
<script type="text/javascript" src="~/Content/fullcalendar/fullcalendar.js"></script>
<script src="~/js/qfk/common.js"></script>

<script>
    $('#datatable').DataTable({
        lengthMenu: [[25, 50, 100], [25, 50, 100]], order: [[3, "desc"]],
        destroy: true, bProcessing: true, responsive: false, bServerSide: true, bAutoWidth: true, scrollX: false,
        language: {
            lengthMenu: "_MENU_ per page", zeroRecords: "Sorry no records found", info: "Showing <b>_START_ to _END_</b> of _TOTAL_",
            infoFiltered: "", infoEmpty: "No records found", processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>'
        },
        sAjaxSource: "/api/campaigns/list",
        fnServerData: function (sSource, aoData, fnCallback, oSettings) {
            if (oSettings.aaSorting.length > 0) { aoData.push({ name: "sSortColName", value: oSettings.aoColumns[oSettings.aaSorting[0][0]].data }); }
            oSettings.jqXHR = $.ajax({
                url: sSource, data: aoData,// dataType: 'json', type: "get",
                success: function (result) {
                    //let _recordsTotal = data.length > 0 ? data[0].totalcount : 0;
                    return fnCallback({ sEcho: aoData.find(el => el.name === "sEcho").value, recordsTotal: result.total, recordsFiltered: result.total, aaData: result.data });
                }
            });
        },
        columns: [
            {
                data: 'campaign_name', title: 'Campaign', sWidth: "30%", render: function (data, type, row, meta) {
                    let h = '', g = JSON.parse(row.audiences);
                    $.each(g, function (i, r) { h += `<p class="text-muted mb-0"><a href="/list/${i}/members" class="text-dark">${r}</a></p>`; });
                    return `<h5 class="text-truncate font-size-14 mb-1"><a href="/campaigns/create/${row.campaign_id}">${data}</a></h5> ${h}`;
                }
            },
            { data: 'campaign_type', title: 'Type', sWidth: "10%", render: function (data, type, row, meta) { return `<span class="badge badge-soft-dark p-1 font-size-12"><i class="fa fa-envelope me-1"></i> ${data}</span>`; } },
            { data: 'campaign_status', title: 'Status', sWidth: "10%", render: function (data, type, row, meta) { return `<span class="badge badge-soft-${data === 'Sent' ? 'success' : 'dark'} p-1 font-size-12"><i class="${data === 'Sent' ? 'mdi mdi-check-bold' : 'fas fa-pen-square'}  me-1"></i> ${data}</span>` } },
            { data: 'updated', title: 'Last updated', sWidth: "10%", render: function (data, type, row, meta) { return moment(data).format('MMMM Do YYYY, h:mm A'); } },
            { data: 'open_rate', title: 'Open rate', sWidth: "10%", render: $.fn.dataTable.render.number(',', '.', 0, '') },
            { data: 'click_rate', title: 'Click rate', sWidth: "10%", render: $.fn.dataTable.render.number(',', '.', 0, '') },
            { data: 'active_on_Site', title: 'Active on Site', sWidth: "10%", render: $.fn.dataTable.render.number(',', '.', 0, '') }
            //{ data: 'template_id', title: 'Action', sWidth: "10%", orderable: false, render: function (data, type, row, meta) { return action(row); } }
        ]
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#eventcalendar').fullCalendar({
            themeSystem: 'bootstrap4', height: "100%", weekNumbers: false, firstDay: 0, selectable: true, defaultView: 'month',
            header: { left: 'prev,next today', center: 'title', right: 'month,agendaWeek,agendaDay,listMonth' },
            eventLimit: true, // allow "more" link when too many events
            events: function (start, end, timezone, callback) {
                //let option = { strValue1: moment(start).format('MM/DD/YYYY'), strValue2: moment(end).format('MM/DD/YYYY') };
                let option = { sSortColName: 'updated', iDisplayLength: 500, iDisplayStart: 0 };
                $.ajax({
                    url: '/api/campaigns/list', type: "GET", dataType: "JSON", data: option, beforeSend: function () {  },
                    success: function (result) { callback(result); },
                    complete: function () { $("#loader").hide(); }, error: function (xhr, status, err) { $("#loader").hide(); }
                });
            },
            editable: true,
            eventClick: function (calEvent, jsEvent, view) {
                let obj = {
                    id: calEvent.id, event_label: calEvent.event_label, start_date: moment(calEvent.start).format('MM/DD/YYYY'), end_date: moment(calEvent.end).format('MM/DD/YYYY'),
                    task: calEvent.title, description: calEvent.description, backgroundcolor: calEvent.backgroundColor, event_type: 0, assigned_to: calEvent.assigned_to
                }
                if (obj.assigned_to != "" && obj.assigned_to != null) {
                    obj.assigned_to = obj.assigned_to.split(",").map((el) => parseInt(el));
                    obj.event_type = 1;
                }
                addEventModal(obj);
                // change the border color just for fun
                //$(this).css('border-color', 'red');

            },
            select: function (start, end, allDay) {
                let obj = { id: 0, event_label: '', start_date: moment(start).format('MM/DD/YYYY'), end_date: moment(end).format('MM/DD/YYYY'), assigned_to: '', task: '', description: '', backgroundcolor: '#0073b7', event_type: 0 }
                addEventModal(obj);
            },
            eventRender: function (event, element) {
                console.log(event, element);
                $(element).tooltip({ title: event.title + ' : ' + event.description, placement: 'bottom' });
                //element.qtip({
                //    content: event.title
                //});
            }
        });
        $(document).on("change", "#ddleventtype", function (t) {
            t.preventDefault(); let id = parseInt($('#ddleventtype').val()) || 0;
            if (id > 0) { $('#ddluser').prop('disabled', false); }
            else { $('#ddluser').prop('disabled', true); }
        });
        $(document).on("click", "#btnAddNewEvent", function (t) {
            t.preventDefault(); AddEvents();
        });
        // Color chooser button
        $(document).on("click", "#color-chooser > li > a", function (e) {
            e.preventDefault(); var currColor = '#0073b7'; //Red by default
            // Save color
            currColor = rgb2hex($(this).css('color'));
            $('#color-chooser').find('i').removeClass('fa-check-square'); $('#color-chooser').find('i').addClass('fa-square');
            $(this).find('i').removeClass('fa-square'); $(this).find('i').addClass('fa-check-square');
            // Add color effect to button
            $('#btnAddNewEvent').css({ 'background-color': currColor, 'border-color': currColor });
            $('#btnAddNewEvent').data('bgcolor', currColor);
        })
    });
    const rgb2hex = (rgb) => `#${rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/).slice(1).map(n => parseInt(n, 10).toString(16).padStart(2, '0')).join('')}`

    function addEventModal(obj) {
        let _Html = '<div class="modal-dialog">';
        _Html += '<div class="modal-content">';
        _Html += '<div class="modal-header">';
        _Html += '<button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="fa fa-times"></i></button>';
        _Html += '<h4 class="modal-title" id="myModalLabel">Add Event</h4>';
        _Html += '</div>';
        _Html += '<div class="modal-body">';

        _Html += '<div class="row">';

        _Html += '<div class="col-md-4" >';
        _Html += '<div class="form-group">';
        _Html += '<label for="startdate">Start Date</label><span style="color:red">*</span>';
        _Html += '<input type="text" class="form-control" id="txtstartdate" disabled value="' + obj.start_date + '"/>';
        _Html += '</div>';
        _Html += '</div>';
        _Html += '<div class="col-md-4" >';
        _Html += '<div class="form-group">';
        _Html += '<label for="enddate">End Date</label><span style="color:red">*</span>';
        _Html += '<input type="text" class="form-control" id="txtenddate" value="' + obj.end_date + '"/>';
        _Html += '</div>';
        _Html += '</div>';
        _Html += '<div class="col-md-4" >';
        _Html += '<div class="form-group">';
        _Html += '<label for="enddate">Event Type</label><span style="color:red">*</span>';
        _Html += '<select class="form-control select2" id="ddleventtype" placeholder="Event Type" style="width: 100%;"><option value="1">Public</option><option value="0" selected>Private</option></select>';
        _Html += '</div>';
        _Html += '</div>';

        _Html += '</div >';

        _Html += '<div class="row">';
        _Html += '<div class="col-md-12" >';
        _Html += '<div class="form-group">';
        _Html += '<label for="task">Event Assigned To</label>';
        _Html += '<select class="form-control select2" id="ddluser" placeholder="Select user" multiple style="width: 100%;" disabled></select>';
        _Html += '</div>';
        _Html += '</div>';
        _Html += '</div >';

        _Html += '<div class="row">';
        _Html += '<div class="col-md-12" >';
        _Html += '<div class="form-group">';
        _Html += '<label for="task">Title</label><span style="color:red">*</span>';
        _Html += '<input type="text" class="form-control" id="txttask" maxlength="250" placeholder="Event Title" value="' + obj.task + '"/>';
        _Html += '</div>';
        _Html += '</div>';
        _Html += '</div >';

        _Html += '<div class="row">';
        _Html += '<div class="col-md-12" >';
        _Html += '<div class="form-group">';
        _Html += '<label for="enddate">Description</label>';
        _Html += '<textarea class="form-control" id="txtdescription" placeholder="Event Description" rows="3">' + obj.description + '</textarea>';
        _Html += '</div>';
        _Html += '</div>';
        _Html += '</div>';

        _Html += '<div class="btn-group" style="width: 100%; margin-bottom: 10px;">';
        _Html += '    <ul class="fc-color-picker" id="color-chooser">';
        _Html += '        <li><a class="text-aqua" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-blue" href="#"><i class="fa fa-check-square"></i></a></li>';
        _Html += '        <li><a class="text-light-blue" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-teal" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-yellow" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-orange" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-green" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-lime" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-red" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-purple" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-fuchsia" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-muted" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '        <li><a class="text-navy" href="#"><i class="fa fa-square"></i></a></li>';
        _Html += '    </ul>';
        _Html += '</div>';

        _Html += '</div > ';
        _Html += '<div class="modal-footer">';
        if ($('.page-title').data('ut').includes('administrator')) {
            _Html += '<button type="button" class="btn btn-danger" id="btnAddNewEvent" data-id="' + obj.id + '" data-bgcolor="' + obj.backgroundcolor + '">' + (obj.id > 0 ? 'Update' : 'Add') + '</button>';
        }
        else {
            if (obj.is_editable) {
                _Html += '<button type="button" class="btn btn-danger" id="btnAddNewEvent" data-id="' + obj.id + '" data-bgcolor="' + obj.backgroundcolor + '">' + (obj.id > 0 ? 'Update' : 'Add') + '</button>';
            }
            else {
                _Html += '<button class="btn btn-default" id="btnclose" data-dismiss="modal">Close</button>';
            }
        }
        _Html += '</div>';
        _Html += '</div>';
        _Html += '</div>';
        $("#eventModal").empty().html(_Html);
        $("#eventModal").modal({ backdrop: 'static', keyboard: false }); $("#txttask").focus();
        $('#txtstartdate,#txtenddate').datepicker({ format: 'mm/dd/yyyy', autoclose: true, todayHighlight: true });
        $('#ddleventtype,#ddluser').select2(); getUsers();
        $('#ddleventtype').val(obj.event_type).trigger('change');
        $('#ddluser').val(obj.assigned_to).trigger('change');
        if ($('.page-title').data('ut').includes('administrator')) {
            $('#txtenddate,#ddleventtype,#ddluser,#txttask,#txtdescription').prop('disabled', false);
        }
        else {
            if (obj.is_editable) {
                $('#txtenddate,#ddleventtype,#ddluser,#txttask,#txtdescription').prop('disabled', false);
            }
            else {
                $('#txtenddate,#ddleventtype,#ddluser,#txttask,#txtdescription').prop('disabled', true);
            }
        }

    }

    function getUsers() {
        $.ajax({
            url: "/Events/GetUsersList", type: "Get", beforeSend: function () { $("#loader").show(); },
            success: function (data) {
                let dt = JSON.parse(data);
                $.each(dt['Table'], function (i, row) { $("#ddluser").append('<option value="' + row.ID + '">' + row.user_login + '</option>'); });
            },
            complete: function () { $("#loader").hide(); },
            error: function (xhr, status, err) { $("#loader").hide(); }, async: false
        });
    }

    function AddEvents() {
        let startdate = $("#txtstartdate").val(), enddate = $("#txtenddate").val();
        let assignedto = $('#ddluser option:selected').toArray().map(item => item.value).join();
        let assigneduser = $('#ddluser option:selected').toArray().map(item => item.text).join();
        let task = $("#txttask").val(), description = $("#txtdescription").val(); backgroundcolor = '';

        if (startdate == "") { swal('Alert', 'Please enter start date', 'error').then(function () { swal.close(); $('#txtstartdate').focus(); }); }
        else if (enddate == "") { swal('Alert', 'Please enter end date', 'error').then(function () { swal.close(); $('#txtenddate').focus(); }); }
        else if (task == "") { swal('Alert', 'Please enter task', 'error').then(function () { swal.close(); $('#txttask').focus(); }); }
        else {
            var obj = { rowid: parseInt($("#btnAddNewEvent").data('id')) || 0, event_label: 'Event', start_date: startdate, end_date: enddate, assigned_to: assignedto, assigned_user: assigneduser, status: 1, task: task, description: description, backgroundcolor: $('#btnAddNewEvent').data('bgcolor') }
            let _event = obj.rowid > 0 ? 'UpdateEvents' : 'AddEvents';
            $.ajax({
                url: '/Events/' + _event, dataType: 'json', type: 'Post', contentType: "application/json; charset=utf-8",
                data: JSON.stringify(obj), beforeSend: function () { $("#loader").show(); },
                success: function (data) {
                    if (data.status == true) {
                        swal('Success', data.message, 'success').then((result) => {
                            $("#eventModal").modal('hide'); $('#eventcalendar').fullCalendar('refetchEvents');
                            ActivityLog('Add/Edit new event \'' + data.id + ' - ' + obj.task + '\'', '/Events/EventCalendar');
                        });
                    }
                    else { swal('Alert!', data.message, 'error'); }
                },
                complete: function () { $("#loader").hide(); },
                error: function (error) { swal('Error!', 'something went wrong', 'error'); },
            })

        }
    }
</script>

